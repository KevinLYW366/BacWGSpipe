"""
BacWGSpipe - Snakemake Workflow
De novo assembly-based WGS data analysis pipeline for most bacteria.

BacWGSpipe supports three types of WGS data sources:
    1. Illumina short reads
    2. Long reads (either PacBio or Nanopore)
    3. Illumina short reads + Long reads (either PacBio or Nanopore) from the same isolate

BacWGSpipe provides the following analysis modules:
    1. Raw sequencing reads QC and pre-processing
    2. Genome assembly
    3. Genome annotation and Genomic component analysis:
        3.1 Genes & ncRNA
        3.2 Mobile genetic elements (MGEs):
            3.2.1 Plasmid:
            3.2.2 Prophage
            3.2.3 Integrative and conjugative elements (ICEs)
            3.2.4 Insertion sequences (IS)
            3.2.5 Genomic islands (GIs)
    4. Gene function analysis:
        4.1 Gene function annotation (GO, KEGG, COG, and NCBI Taxonomy)
        4.2 Virulence or pathogenicity analysis:
            4.2.1 Antimicrobial resistance (AMR) genes
            4.2.2 Virulence factors (VF)
            4.2.3 Secretory proteins
    5. Genotype (MLST)
    6. Genome visualization (Chromosome & Plasmid circos plot)
    7. Comparative genomic analysis
    8. Summary report

Writer: Yewei Lu (lyw@cwmda.com) & Xiangchen Li (lxc@cwmda.com)
"""

##################
# Common modules #
##################
include: "rules/common.smk"

################
# Target rules #
################
# Perform phylogenetic analysis only if there is more than one sample to analyze
phylogenetic_output = list()
if len(SAMPLES) > 1:
    # Phylogenetic tree file
    phylogenetic_output.append("results/07.phylogenetics/iqtree/core_gene_alignment.treefile")
    # itol annotation files
    phylogenetic_output.append("results/07.phylogenetics/itol/amr.binary.itol.txt")
    phylogenetic_output.append("results/07.phylogenetics/itol/vf.binary.itol.txt")
    phylogenetic_output.append("results/07.phylogenetics/itol/mlst.binary.itol.txt")

# Final output of the workflow
## Modify the input section of rule all to control which part of the workflow will be run
### Hybrid mode
if config["seqdata_source"] == 0:
        rule all:
            input:
                ##### Step 01. Raw sequencing data pre-processing #####
                # Fastp QC stats
                "results/01.data_clean/short_read/all_fastp_stats.xls",
                # Kraken2 QC result
                "results/01.data_clean/short_read/all_kraken2_result.xls",
                # MultiQC report for Illumina short fastq reads QC (FastQC)
                "results/01.data_clean/short_read/multiqc/multiqc_report.html",
                # Merged NanoStat QC results for Nanopore long fastq raw reads
                "results/00.rawdata/long_read/all_raw_NanoStats.xls",
                # MultiQC report for Nanopore long fastq raw reads QC (NanoStat)
                "results/00.rawdata/long_read/multiqc_raw/multiqc_report.html",
                # Merged NanoStat QC results for Nanopore long fastq clean reads
                "results/01.data_clean/long_read/all_clean_NanoStats.xls",
                # Nanoplot report for Nanopore long fastq clean reads QC
                expand("results/01.data_clean/long_read/{sample}/nanoplot_clean/{sample}_clean_NanoPlot-report.html", sample=SAMPLES),
                # MultiQC report for Nanopore long fastq clean reads QC (NanoStat)
                "results/01.data_clean/long_read/multiqc_clean/multiqc_report.html",

                ##### Step 02. Assembly #####
                # Flag to indicate that assembly fasta files of all samples are ready
                expand("results/02.assembly/{sample}/assembly/separate_assembly.done",sample=SAMPLES),
                # Merged assembly statistics
                "results/02.assembly/all_assembly_stats.xls",
                # MulriQC report for genome assembly QC (Quast)
                "results/02.assembly/multiqc/multiqc_report.html",

                ##### Step 03. Genome annotation and Genomic component analysis #####
                # Gene length distribution plot based on prokka prediction results
                lambda wildcards: get_qualified_results("results/03.genome_component/{sample}/prokka/{sample}_gene_length.png", wildcards),
                # Merged plasmid PLSDB annotation results
                "results/03.genome_component/all_plsdb_results.xls",
                # Merged plasmid mobility prediction results generated by MOB-suite
                "results/03.genome_component/all_mob-suite_results.xls",
                # Merged Prophage sequences and annotation results generated by Phigaro
                "results/03.genome_component/all_phigaro_results.xls",
                # Merged Prediction of ICE and IME in genome sequences of bacteria for all samples by ICEfinder
                "results/03.genome_component/all_icefinder_results.xls",
                # Merged digIS summary statistics output
                "results/03.genome_component/all_digis_results.xls",
                # Merged results of genomic islands predicted by IslandPath-DIMOB
                "results/03.genome_component/all_islandpath_results.xls",
                # Merged results of CRISPRs predicted by CRISPRCasTyper
                "results/03.genome_component/all_cctyper_results.xls",

                ##### Step 04. Genome function analysis #####
                # EggNOG-mapper annotation results
                lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/eggnog-mapper/{sample}.emapper.annotations", wildcards),
                # GO annotation plots
                lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/GO/{sample}_go.pdf", wildcards),
                # KEGG PATHWAY annotation plots
                lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/KEGG/{sample}_kegg.pdf", wildcards),
                # COG annotation plots
                lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/COG/{sample}_cog.pdf", wildcards),
                # Taxonomy annotation plots
                lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/Taxonomy/{sample}_taxonomy.pdf", wildcards),
                # Merged CARD annotation results
                "results/04.gene_function/all_card_results.xls",
                "results/04.gene_function/all_card_results_matrix.xls",
                "results/04.gene_function/all_card_results_matrix_binary.xlsx",
                # Merged ccne results
                "results/04.gene_function/all_ccne_results.xls",
                # Merged VFDB annotation results
                "results/04.gene_function/all_vfdb_results.xls",
                "results/04.gene_function/all_vfdb_results_matrix.xls",
                "results/04.gene_function/all_vfdb_results_matrix_binary.xlsx",
                # Secretory protein results
                lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/secretory_protein/{sample}_secretory_protein_results.xls", wildcards),

                ##### Step05. Genotype #####
                # Merged MLST report
                "results/05.genotype/all_mlst_results.xls",

                ##### Step 06. Genome Visualization #####
                # Flag file when the step of chromosome visualization is done
                lambda wildcards: get_qualified_results("results/06.genome_visualization/{sample}/mgcplotter/mgcplotter_chr.done", wildcards),
                # Flag file when the step of plasmid visualization is done
                lambda wildcards: get_qualified_results("results/06.genome_visualization/{sample}/mgcplotter/mgcplotter_plas.done", wildcards),

                ##### Step07. Phylogenetic Analysis #####
                phylogenetic_output,

                ##### Step08. Summary Report #####
                # Summary report in html format
                "results/08.summary_report/summary_report.html"
### Illumina short reads ONLY
elif config["seqdata_source"] == 2:
    rule all:
        input:
            ##### Step 01. Raw sequencing data pre-processing #####
            # Fastp QC stats
            "results/01.data_clean/short_read/all_fastp_stats.xls",
            # Kraken2 QC result
            "results/01.data_clean/short_read/all_kraken2_result.xls",
            # MultiQC report for Illumina short fastq reads QC (FastQC)
            "results/01.data_clean/short_read/multiqc/multiqc_report.html",

            ##### Step 02. Assembly #####
            # Flag to indicate that assembly fasta files of all samples are ready
            expand("results/02.assembly/{sample}/assembly/separate_assembly.done",sample=SAMPLES),
            # Merged assembly statistics
            "results/02.assembly/all_assembly_stats.xls",
            # MulriQC report for genome assembly QC (Quast)
            "results/02.assembly/multiqc/multiqc_report.html",

            ##### Step 03. Genome annotation and Genomic component analysis #####
            # Gene length distribution plot based on prokka prediction results
            lambda wildcards: get_qualified_results("results/03.genome_component/{sample}/prokka/{sample}_gene_length.png",wildcards),
            # Merged results of plasmid sequences predicted by Plasmidfinder
            "results/03.genome_component/all_plasmidfinder_results.xls",
            # Merged results of plasmid sequences predicted by Platon
            "results/03.genome_component/all_platon_results.xls",
            # Merged Prophage sequences and annotation results generated by Phigaro
            "results/03.genome_component/all_phigaro_results.xls",
            # Merged Prediction of ICE and IME in genome sequences of bacteria for all samples by ICEfinder
            "results/03.genome_component/all_icefinder_results.xls",
            # Merged digIS summary statistics output
            "results/03.genome_component/all_digis_results.xls",
            # Merged results of genomic islands predicted by IslandPath-DIMOB
            "results/03.genome_component/all_islandpath_results.xls",
            # Merged results of CRISPRs predicted by CRISPRCasTyper
            "results/03.genome_component/all_cctyper_results.xls",

            ##### Step 04. Genome function analysis #####
            # EggNOG-mapper annotation results
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/eggnog-mapper/{sample}.emapper.annotations",wildcards),
            # GO annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/GO/{sample}_go.pdf",wildcards),
            # KEGG PATHWAY annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/KEGG/{sample}_kegg.pdf",wildcards),
            # COG annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/COG/{sample}_cog.pdf",wildcards),
            # Taxonomy annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/Taxonomy/{sample}_taxonomy.pdf",wildcards),
            # Merged CARD annotation results
            "results/04.gene_function/all_card_results.xls",
            "results/04.gene_function/all_card_results_matrix.xls",
            "results/04.gene_function/all_card_results_matrix_binary.xlsx",
            # Merged ccne results
            "results/04.gene_function/all_ccne_results.xls",
            # Merged VFDB annotation results
            "results/04.gene_function/all_vfdb_results.xls",
            "results/04.gene_function/all_vfdb_results_matrix.xls",
            "results/04.gene_function/all_vfdb_results_matrix_binary.xlsx",
            # Secretory protein results
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/secretory_protein/{sample}_secretory_protein_results.xls",wildcards),

            ##### Step05. Genotype #####
            # Merged MLST report
            "results/05.genotype/all_mlst_results.xls",

            ##### Step07. Phylogenetic Analysis #####
            phylogenetic_output,

            ##### Step08. Summary Report #####
            # Summary report in html format
            "results/08.summary_report/summary_report.html"
### Long reads ONLY
elif config["seqdata_source"] == 1:
    rule all:
        input:
            ##### Step 01. Raw sequencing data pre-processing #####
            # Merged NanoStat QC results for Nanopore long fastq raw reads
            "results/00.rawdata/long_read/all_raw_NanoStats.xls",
            # MultiQC report for Nanopore long fastq raw reads QC (NanoStat)
            "results/00.rawdata/long_read/multiqc_raw/multiqc_report.html",
            # Merged NanoStat QC results for Nanopore long fastq clean reads
            "results/01.data_clean/long_read/all_clean_NanoStats.xls",
            # Nanoplot report for Nanopore long fastq clean reads QC
            expand("results/01.data_clean/long_read/{sample}/nanoplot_clean/{sample}_clean_NanoPlot-report.html",sample=SAMPLES),
            # MultiQC report for Nanopore long fastq clean reads QC (NanoStat)
            "results/01.data_clean/long_read/multiqc_clean/multiqc_report.html",

            ##### Step 02. Assembly #####
            # Flag to indicate that assembly fasta files of all samples are ready
            expand("results/02.assembly/{sample}/assembly/separate_assembly.done",sample=SAMPLES),
            # Merged assembly statistics
            "results/02.assembly/all_assembly_stats.xls",
            # MulriQC report for genome assembly QC (Quast)
            "results/02.assembly/multiqc/multiqc_report.html",

            ##### Step 03. Genome annotation and Genomic component analysis #####
            # Gene length distribution plot based on prokka prediction results
            lambda wildcards: get_qualified_results("results/03.genome_component/{sample}/prokka/{sample}_gene_length.png",wildcards),
            # Merged results of plasmid sequences predicted by Plasmidfinder
            "results/03.genome_component/all_plasmidfinder_results.xls",
            # Merged Prophage sequences and annotation results generated by Phigaro
            "results/03.genome_component/all_phigaro_results.xls",
            # Merged Prediction of ICE and IME in genome sequences of bacteria for all samples by ICEfinder
            "results/03.genome_component/all_icefinder_results.xls",
            # Merged digIS summary statistics output
            "results/03.genome_component/all_digis_results.xls",
            # Merged results of genomic islands predicted by IslandPath-DIMOB
            "results/03.genome_component/all_islandpath_results.xls",
            # Merged results of CRISPRs predicted by CRISPRCasTyper
            "results/03.genome_component/all_cctyper_results.xls",

            ##### Step 04. Genome function analysis #####
            # EggNOG-mapper annotation results
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/eggnog-mapper/{sample}.emapper.annotations",wildcards),
            # GO annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/GO/{sample}_go.pdf",wildcards),
            # KEGG PATHWAY annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/KEGG/{sample}_kegg.pdf",wildcards),
            # COG annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/COG/{sample}_cog.pdf",wildcards),
            # Taxonomy annotation plots
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/Taxonomy/{sample}_taxonomy.pdf",wildcards),
            # Merged CARD annotation results
            "results/04.gene_function/all_card_results.xls",
            "results/04.gene_function/all_card_results_matrix.xls",
            "results/04.gene_function/all_card_results_matrix_binary.xlsx",
            # Merged VFDB annotation results
            "results/04.gene_function/all_vfdb_results.xls",
            "results/04.gene_function/all_vfdb_results_matrix.xls",
            "results/04.gene_function/all_vfdb_results_matrix_binary.xlsx",
            # Secretory protein results
            lambda wildcards: get_qualified_results("results/04.gene_function/{sample}/secretory_protein/{sample}_secretory_protein_results.xls",wildcards),

            ##### Step05. Genotype #####
            # Merged MLST report
            "results/05.genotype/all_mlst_results.xls",

            ##### Step07. Phylogenetic Analysis #####
            phylogenetic_output,

            ##### Step08. Summary Report #####
            # Summary report in html format
            "results/08.summary_report/summary_report.html"

###########
# Modules #
###########
include: "rules/step01.data_clean.smk"
include: "rules/step02.assembly.smk"
include: "rules/step03.genome_component.smk"
include: "rules/step04.gene_function.smk"
include: "rules/step05.genotype.smk"
include: "rules/step06.genome_visualization.smk"
include: "rules/step07.phylogenetics.smk"
include: "rules/step08.summary_report.smk"