#########################################
# Step 07. Comparative Genomic Analysis #
#########################################

# Perform phylogenetic analysis only if there is more than one sample to analyze
if len(SAMPLES) > 1:
    # Roary: generate core-genome alignment
    rule roary:
        input:
            # the master annotation in GFF3 format, containing both sequences and annotations, generated by Prokka
            lambda wildcards: get_qualified_results("results/03.genome_component/{sample}/prokka/{sample}.gff", wildcards)
        output:
            # core-genome alignment which will be used to generate a phylotree in next step
            aln = "results/07.phylogenetics/roary/core_gene_alignment.aln",
            # a tree created using the binary presence and absence of accessory genes
            tree = "results/07.phylogenetics/roary/accessory_binary_genes.fa.newick",
            # the gene presence and absence spreadsheet lists each gene and which samples it is present in
            csv = "results/07.phylogenetics/roary/gene_presence_absence.csv",
            rtab = "results/07.phylogenetics/roary/gene_presence_absence.Rtab",
            # a FASTA file which contains a single representative nucleotide sequence
            #   from each of the clusters in the pan genome (core and accessory)
            fa = "results/07.phylogenetics/roary/pan_genome_reference.fa"
        params:
            outdir = "results/07.phylogenetics/roary",
        log:
            "logs/07.phylogenetics/roary.log"
        threads:
            64
        conda:
            "phylogenetics"
        shell:
            """
            # remove the folder automatically created by Snakemake 
            # otherwise Roary would add a timestamp to the existed folder's name
            rm -r {params.outdir}
            roary -e --mafft -p {threads} -f {params.outdir} -r {input} > {log} 2>&1
            """

    # IQ-tree: generate a phylogenetic tree based on the core gene alignment identified by Roary
    rule iqtree:
        input:
            # core gene alignment generated by Roary
            "results/07.phylogenetics/roary/core_gene_alignment.aln"
        output:
            # phylogenetic tree file
            "results/07.phylogenetics/iqtree/core_gene_alignment.treefile",
        params:
            prefix = "results/07.phylogenetics/iqtree/core_gene_alignment",
        log:
            "logs/07.phylogenetics/iqtree.log"
        threads:
            64
        conda:
            "phylogenetics"
        shell:
            """
            iqtree -s {input} -T {threads} -B 1000 -m TEST --prefix {params.prefix} --redo > {log} 2>&1
            """

    # Generate itol annotation files for visualize phylogenetic tree in itol website
    rule itol:
        input:
            # phylogenetic tree file
            tree = "results/07.phylogenetics/iqtree/core_gene_alignment.treefile",
            # AMR results
            amr = "results/04.gene_function/all_card_results_matrix.xls",
            # VF results
            vf = "results/04.gene_function/all_vfdb_results_matrix.xls",
            # MLST results
            mlst = "results/05.genotype/all_mlst_results.xls"
        output:
            # AMR annotation
            amr = "results/07.phylogenetics/itol/amr.binary.itol.txt",
            # VF annotation
            vf = "results/07.phylogenetics/itol/vf.binary.itol.txt",
            # MLST annotation
            mlst = "results/07.phylogenetics/itol/mlst.binary.itol.txt"
        params:
            # Script to generate itol annotation files
            script = "workflow/scripts/generate_itol_annotation.py"
        log:
            "logs/07.phylogenetics/itol.log"
        shell:
            """
            python {params.script} {input.amr} {input.vf} {input.mlst} \
            {output.amr} {output.vf} {output.mlst} > {log} 2>&1
            """